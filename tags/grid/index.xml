<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grid on All the things about web and javascript</title>
    <link>http://vadimpopa.com/tags/grid/</link>
    <description>Recent content in Grid on All the things about web and javascript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2008 - 2014, Vadim Popa; all rights reserved.</copyright>
    <lastBuildDate>Sat, 09 Mar 2013 17:50:16 +0300</lastBuildDate>
    <atom:link href="http://vadimpopa.com/tags/grid/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reload a single record and refresh its ExtJs grid row</title>
      <link>http://vadimpopa.com/post/reload-a-single-record-and-refresh-its-extjs-grid-row/</link>
      <pubDate>Sat, 09 Mar 2013 17:50:16 +0300</pubDate>
      
      <guid>http://vadimpopa.com/post/reload-a-single-record-and-refresh-its-extjs-grid-row/</guid>
      <description>&lt;p&gt;Just gave the answer to this question on &lt;a title=&#34;extjs forum&#34; href=&#34;http://www.sencha.com/forum/showthread.php?258228-Reloading-a-single-record-droma-grid&#34; target=&#34;_blank&#34;&gt;extjs4 forum&lt;/a&gt; and decided to post it here too by adding a code example. The answer is very simple: just load the record with the new data from the server by using the static method &lt;code&gt;Ext.data.Model.load(id,config)&lt;/code&gt; then in the successful callback update that record, do a commit if you need, then refresh record&amp;#8217;s node. Below the explanation in code form:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Ext.define(&#39;Writer.Person&#39;, {
    extend: &#39;Ext.data.Model&#39;,
    fields: [
        {name: &#39;id&#39;, type: &#39;int&#39;},
        {name: &#39;name&#39;, type: &#39;string&#39;}
    ],
    proxy {
      // Config for your proxy, it&#39;s a must for model to have a proxy.
    }
});

Writer.Person.load(3, {
    scope: grid,
    failure: function(record, operation) {
        //do something if the load failed
    },
    success: function(record, operation) {
        var store = grid.getStore(),
            recToUpdate = store.getById(3);

         recToUpdate.set(record.getData());

     // Do commit if you need: if the data from
     // the server differs from last commit data
         recordToUpdate.commit();

         grid.getView().refreshNode(store.indexOfId(3));
    },
    callback: function(record, operation) {
        //do something whether the load succeeded or failed
    }
});
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
