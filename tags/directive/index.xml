<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Directive on All the things about web and javascript</title>
    <link>http://vadimpopa.com/tags/directive/</link>
    <description>Recent content in Directive on All the things about web and javascript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2008 - 2014, Vadim Popa; all rights reserved.</copyright>
    <lastBuildDate>Sun, 01 Feb 2015 22:59:32 +0300</lastBuildDate>
    <atom:link href="http://vadimpopa.com/tags/directive/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Compile can boost your directives</title>
      <link>http://vadimpopa.com/compile-can-boost-your-directives/</link>
      <pubDate>Sun, 01 Feb 2015 22:59:32 +0300</pubDate>
      
      <guid>http://vadimpopa.com/compile-can-boost-your-directives/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;right&#34; src=&#34;../../images/rocket.png&#34; style=&#34;display: block;margin: 0 auto; width:150px;height:150px;&#34;&gt;
Use whenever you can &lt;a href=&#34;https://github.com/angular/angular.js/wiki/Understanding-Directives&#34;&gt;compile&lt;/a&gt; to boost your Angular directives and get rid of whatchers. For instance we have a &lt;code&gt;directive&lt;/code&gt; which acts as a data row in a &lt;code&gt;ngRepeat&lt;/code&gt;, like a grid row. Only besides the trivial columns this row has some action buttons.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!--myDataRow.tpl.html--&amp;gt;
&amp;lt;div class=&amp;quot;my-data-row&amp;quot; ng-class=&amp;quot;{ &#39;my-data-row-selected&#39;: row.isSelected }&amp;quot; layout=&amp;quot;row&amp;quot;&amp;gt;
    &amp;lt;span class=&amp;quot;my-data-row-name&amp;quot;&amp;gt;
      &amp;lt;a class=&amp;quot;my-data-row-id&amp;quot; href=&amp;quot;&amp;quot;&amp;gt;{{ row.id }}&amp;lt;/a&amp;gt;
      &amp;lt;span&amp;gt;{{ row.name }}&amp;lt;/span&amp;gt;
    &amp;lt;/span&amp;gt;
    &amp;lt;span class=&amp;quot;my-data-row-actions&amp;quot; flex&amp;gt;
      &amp;lt;i ng-show=&amp;quot;canCommentAction&amp;quot; class=&amp;quot;my-data-row-actions-comment icon&amp;quot; ng-click=&amp;quot;commentOnEntity($event)&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
      &amp;lt;i ng-show=&amp;quot;canDeleteAction&amp;quot; class=&amp;quot;my-data-row-actions-delete icon&amp;quot; ng-click=&amp;quot;deleteEntity($event)&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
      &amp;lt;i class=&amp;quot;icon&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
    &amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function myDataRowDirective() {
    return {
        restrict: &#39;E&#39;,
        replace: true,
        templateUrl: &#39;directives/myDataRow/myDataRow.tpl.html&#39;,
        scope: {
            row: &#39;=&#39;,
            onDelete: &#39;&amp;amp;?&#39;,
            onComment: &#39;&amp;amp;?&#39;
        },
        link: myDataRowLink
    };
}

function myDataRowLink(scope, element, attrs) {
  //the ngShow flags are defined for the row actions
    scope.canDeleteAction = attrs.onDelete;
    scope.canCommentAction = attrs.onComment;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!--Use of myDataRow--&amp;gt;
 &amp;lt;my-data-row
      on-delete=&amp;quot;stories.deleteStory(story, $event)&amp;quot;
      on-comment=&amp;quot;stories.commentOnStory(story, $event)&amp;quot;
      ng-repeat=&amp;quot;story in stories.userStories | filter: stories.searchUserStories | filter: stories.filterUserStoriesObj | orderBy: &#39;index&#39; track by story.id&amp;quot;
      row=&amp;quot;story&amp;quot;&amp;gt;
&amp;lt;/my-data-row&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Everything is fine, the directive works ok. But once the view gets heavy and has a lot of rows to show the user encounters slow responsiveness. The reasons may be beacause of the digest(sometimes running form &lt;code&gt;rootScope&lt;/code&gt;) cycle which runs trough many watchers. In an AngularJS app you can see whatchers everywhere including in &lt;a href=&#34;https://github.com/angular/angular.js/blob/master/src/ng/directive/ngShowHide.js&#34;&gt;ngShows&lt;/a&gt;  used within above template. Having them in a directive within an &lt;code&gt;ngRepeat&lt;/code&gt; adds more overhead to responsivness.&lt;/p&gt;

&lt;p&gt;Here comes &lt;code&gt;compile&lt;/code&gt; which gets rid of whatchers. Instead of checking whether to show or not the action buttons in the &lt;code&gt;link&lt;/code&gt; function, do it in &lt;code&gt;compile&lt;/code&gt;. This way the directive gets rid of 2 &lt;code&gt;ngShows&lt;/code&gt; and at the same time of 2 &lt;code&gt;whatchers&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// myDataRowDirective optimized
function myDataRowDirective() {
    return {
        restrict: &#39;E&#39;,
        replace: true,
        templateUrl: &#39;directives/myDataRow/myDataRow.tpl.html&#39;,
        scope: {
            row: &#39;=&#39;,
            onDelete: &#39;&amp;amp;?&#39;,
            onComment: &#39;&amp;amp;?&#39;
        },
        compile: myDataRowCompile
    };
}

function myDataRowCompile(tElement, tAttrs) {
    if (!tAttrs.onDelete) {
        tElement.find(&#39;.my-data-row-actions-delete&#39;).remove();
    }
    if (!tAttrs.onComment) {
        tElement.find(&#39;.my-data-row-actions-comment&#39;).remove();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the end would like to suggest you to read this stackoverflow &lt;a href=&#34;http://stackoverflow.com/questions/12164138/what-is-the-difference-between-compile-and-link-function-in-angularjs&#34;&gt;thread&lt;/a&gt; which references a few examples of when and how to use &lt;code&gt;compile&lt;/code&gt; instead of &lt;code&gt;link&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Happy 2015 coding !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Onblur like for a div in AngularJS to close a popup</title>
      <link>http://vadimpopa.com/onblur-like-for-a-div-in-angularjs-to-close-a-popup/</link>
      <pubDate>Fri, 24 Jan 2014 17:50:16 +0300</pubDate>
      
      <guid>http://vadimpopa.com/onblur-like-for-a-div-in-angularjs-to-close-a-popup/</guid>
      <description>&lt;p&gt;Often is needed to close a popup when the user clicks anywhere else in the page but not on popup. There are many workarounds for such functionality, including one of the simplest which is to give to the &lt;code&gt;div&lt;/code&gt; the &lt;code&gt;tabindex&lt;/code&gt; attribute and use &lt;code&gt;onblur&lt;/code&gt; event.&lt;/p&gt;

&lt;p&gt;But &lt;code&gt;onblur&lt;/code&gt; wasn&amp;rsquo;t suitable for me because is fired only if the popup have got the focus, and the user may want to close that popup without giving the focus to it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;html&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div tabindex=&amp;quot;-1&amp;quot; onblur=&amp;quot;closeMyPopup()&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;AngularJS&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;popup&amp;quot; tabindex=&amp;quot;-1&amp;quot; data-ng-show=&amp;quot;form.popups.myPopup&amp;quot; data-ui-event=&amp;quot;{ blur : &#39;closeMyPopup()&#39;}&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I&amp;rsquo;ve coded a very simple AngularJSÂ directive which evaluates an expression on the containing scope when the dom click event is triggered and the target is not a child of that popup:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;app.directive(&amp;quot;outsideClick&amp;quot;, [&#39;$document&#39;,&#39;$parse&#39;, function( $document, $parse ){
    return {
        link: function( $scope, $element, $attributes ){
            var scopeExpression = $attributes.outsideClick,
                onDocumentClick = function(event){
                    var isChild = $element.find(event.target).length &amp;gt; 0;

                    if(!isChild) {
                        $scope.$apply(scopeExpression);
                    }
                };

            $document.on(&amp;quot;click&amp;quot;, onDocumentClick);

            $element.on(&#39;$destroy&#39;, function() {
                $document.off(&amp;quot;click&amp;quot;, onDocumentClick);
            });
        }
    }
}]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And simply to use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;popup&amp;quot; data-ng-show=&amp;quot;form.popups.myPopup&amp;quot; outside-click=&amp;quot;closeMyPopup()&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
